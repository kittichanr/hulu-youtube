{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kittichan/Documents/react_JS/first-next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/kittichan/Documents/react_JS/first-next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/kittichan/Documents/react_JS/first-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kittichan/Documents/react_JS/first-next/pages/post.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport { withRouter } from 'next/router';\n\nvar Post = function Post(_ref) {\n  var router = _ref.router,\n      comments = _ref.comments;\n  var id = router.query.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"You are looking at post #\", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, _this), comments.map(function (comment) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, _this);\n}; // run in server side\n\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query;\n            _context.next = 3;\n            return axios.get('https://jsonplaceholder.typicode.com/comments?postId=3');\n\n          case 3:\n            res = _context.sent;\n            data = res.data;\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, query), {}, {\n              comments: data\n            }));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = withRouter(Post);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/kittichan/Documents/react_JS/first-next/pages/post.js"],"names":["axios","withRouter","Post","router","comments","id","query","map","comment","email","getInitialProps","get","res","data"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAyB;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAAA,MAC1BC,EAD0B,GACpBF,MAAM,CAACG,KADa,CAC1BD,EAD0B;AAElC,sBACI;AAAA,4BACI;AAAA,8CAA8BA,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEKD,QAAQ,CAACG,GAAT,CAAa,UAAAC,OAAO,EAAE;AACnB,0BACI;AAAA,kBAAIA,OAAO,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,eADJ;AAGH,KAJA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAUH,CAZD,C,CAcA;;;KAdMP,I;;AAeNA,IAAI,CAACQ,eAAL;AAAA,uEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASJ,YAAAA,KAAT,SAASA,KAAT;AAAA;AAAA,mBACDN,KAAK,CAACW,GAAN,CAAU,wDAAV,CADC;;AAAA;AACbC,YAAAA,GADa;AAEXC,YAAAA,IAFW,GAEFD,GAFE,CAEXC,IAFW;AAAA,6EAGPP,KAHO;AAGAF,cAAAA,QAAQ,EAAES;AAHV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAOA,qBAAeZ,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import axios from 'axios';\nimport { withRouter } from 'next/router'\n\nconst Post = ({ router,comments }) => {\n    const { id} = router.query\n    return (\n        <div>\n            <h1>You are looking at post #{id}</h1>\n            {comments.map(comment=>{\n                return(\n                    <p>{comment.email}</p>\n                )\n            })}\n        </div>\n    )\n}\n\n// run in server side\nPost.getInitialProps = async ({ query }) => {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/comments?postId=3')\n    const { data } = res\n    return { ...query, comments: data }\n}\n\n\nexport default withRouter(Post)"]},"metadata":{},"sourceType":"module"}